"""
HTML编辑器架构说明

整体架构采用分层设计模式，从下到上分为：
1. 核心模型层 - 负责HTML文档的数据结构和基础操作
2. 命令层 - 封装各种操作命令，支持撤销/重做
3. 会话层 - 管理多文件编辑会话
4. 应用层 - 处理用户输入和界面展示

依赖关系:
应用层 -> 会话层 -> 命令层 -> 核心模型层

各层详细说明：

核心模型层:
- HtmlModel: HTML文档的数据模型
- HtmlElement: HTML元素
- 不依赖其他组件，被其他所有层依赖

命令层:
- Command: 命令基类
- 特定命令实现(AppendCommand, DeleteCommand等)
- 依赖核心模型层，被会话层和应用层依赖

会话层:
- Session: 管理多文件编辑会话
- Editor: 单文件编辑器
- 依赖命令层，被应用层依赖

应用层:
- HTMLEditorApp: 主应用类
- 命令行解析与执行
- 依赖会话层，不被其他组件依赖

插件系统:
- 拼写检查、语法高亮等功能以插件形式集成
- 通过观察者模式与核心层交互
"""

# 架构图的ASCII表示
ARCHITECTURE_DIAGRAM = """
+---------------------+
|    应用层           |
|  HTMLEditorApp      |
+----------+----------+
           |
           v
+----------+----------+
|    会话层           |
|  Session, Editor    |
+----------+----------+
           |
           v
+----------+----------+     +----------------+
|    命令层           |<----|   插件系统      |
|  Command子类        |     |  SpellChecker  |
+----------+----------+     +----------------+
           |                        ^
           v                        |
+----------+----------+             |
|   核心模型层        |-------------+
|  HtmlModel         |
+---------------------+
"""

def print_architecture():
    """打印架构图"""
    print("\n=== HTML编辑器架构图 ===\n")
    print(ARCHITECTURE_DIAGRAM)
    print("\n======================\n")

if __name__ == "__main__":
    print_architecture()
